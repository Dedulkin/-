<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>